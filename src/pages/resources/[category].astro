---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { format } from 'date-fns';
import ResourceFilter from '../../components/ResourceFilter.astro';
export async function getStaticPaths() {
  return [
    { params: { category: 'study-guides' } },
    { params: { category: 'application-tips' } },
    { params: { category: 'country-guides' } },
    { params: { category: 'test-prep' } },
  ];
}

const { category } = Astro.params;

// Get all resources
const allResources = await getCollection('resources');

// Filter resources by category
const resources = allResources.filter(resource => {
  const categoryMap = {
    'study-guides': 'study-guides',
    'application-tips': 'application-tips',
    'country-guides': 'country-guides',
    'test-prep': 'test-prep'
  };
  return resource.data.category === categoryMap[category];
});

const categoryTitles = {
  'study-guides': 'Study Guides',
  'application-tips': 'Application Tips',
  'country-guides': 'Country Guides',
  'test-prep': 'Test Preparation'
};

const categoryDescriptions = {
  'study-guides': 'Comprehensive guides to help you succeed in your academic journey',
  'application-tips': 'Expert advice on crafting successful applications for universities abroad',
  'country-guides': 'Detailed information about studying in different countries',
  'test-prep': 'Resources to help you prepare for standardized tests'
};

const categoryIcons = {
  'study-guides': `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />`,
  'application-tips': `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />`,
  'country-guides': `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />`,
  'test-prep': `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4" />`
};

// Get unique values for filters
const examTypes = category === 'test-prep' 
  ? [...new Set(resources.flatMap(resource => resource.data.tags.filter(tag => 
      ['ielts', 'toefl', 'gre', 'gmat', 'sat', 'digital sat'].includes(tag.toLowerCase())
    )))]
  : [];

const countries = category === 'country-guides'
  ? [...new Set(resources.flatMap(resource => resource.data.tags.filter(tag =>
      ['united states', 'uk', 'germany', 'finland', 'sweden', 'australia', 'netherlands', 'canada'].includes(tag.toLowerCase())
    )))]
  : [];
---

<Layout title={categoryTitles[category]}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="text-center mb-12">
      <div class="flex items-center justify-center gap-3 mb-4">
        <div class="flex-shrink-0 w-12 h-12 rounded-xl bg-primary-50 border border-primary-200 flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 text-primary-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" set:html={categoryIcons[category]} />
        </div>
      </div>
      <h1 class="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">{categoryTitles[category]}</h1>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto">
        {categoryDescriptions[category]}
      </p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
      <!-- Filters -->
      <aside class="lg:col-span-1 h-fit sticky top-24">
        <div class="lg:hidden mb-4">
          <button id="mobile-filters-toggle" class="w-full bg-white p-4 rounded-lg shadow-md flex justify-between items-center border border-gray-200">
            <span class="font-medium">Show Filters</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
        </div>
        
        <div id="mobile-filters" class="hidden lg:block">
          <ResourceFilter
            category={category} 
          />
        </div>
      </aside>

      <!-- Resources List -->
      <div class="lg:col-span-3">
        <div class="grid gap-6 md:grid-cols-2">
          {resources.map(resource => (
            <a 
              href={`/resources/${resource.slug}`}
              class="resource-card group relative"
              data-area={resource.data.area.toLowerCase()}
            >
              <div class="absolute bottom-0 right-0 w-full h-full border-r-4 border-b-4 border-primary-200 rounded-xl pointer-events-none -z-10 translate-x-1 translate-y-1"></div>
              <div class="rounded-xl shadow-md hover:shadow-lg transition-shadow border border-primary-200 overflow-hidden bg-white">
                <div class="p-6">
                  <h3 class="text-xl font-semibold text-[#3c5894] group-hover:text-primary-600 transition-colors mb-3">
                    {resource.data.title}
                  </h3>
                  <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                    {resource.data.description}
                  </p>
                  <div class="flex items-center justify-between">
                    <div class="flex items-center text-sm text-gray-500">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-primary-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                      </svg>
                      {format(new Date(resource.data.lastUpdated), 'MMM d, yyyy')}
                    </div>
                    <div class="flex flex-wrap gap-2">
                      {resource.data.tags.slice(0, 2).map(tag => (
                        <span class="px-2 py-1 bg-primary-50 text-primary-700 rounded-full text-xs">
                          {tag}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
      
      <!-- No Results Message -->
      <div id="no-results-message" class="hidden text-center py-8">
        <p class="text-gray-600">No resources found for the selected filters.</p>
      </div>
    </div>

    {resources.length === 0 && (
      <div class="text-center py-12">
        <p class="text-gray-600">No resources available in this category yet.</p>
      </div>
    )}
  </div>
</Layout>

<script>
  // Mobile filters toggle
  document.addEventListener('DOMContentLoaded', function() {
    const mobileFiltersToggle = document.getElementById('mobile-filters-toggle');
    const mobileFilters = document.getElementById('mobile-filters');
    
    if (mobileFiltersToggle && mobileFilters) {
      mobileFiltersToggle.addEventListener('click', function() {
        mobileFilters.classList.toggle('hidden');
        
        // Update button text and icon
        if (mobileFilters.classList.contains('hidden')) {
          mobileFiltersToggle.innerHTML = `
            <span class="font-medium">Show Filters</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          `;
        } else {
          mobileFiltersToggle.innerHTML = `
            <span class="font-medium">Hide Filters</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
            </svg>
          `;
        }
      });
    }
  });
</script>